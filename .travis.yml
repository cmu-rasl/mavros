<<<<<<< HEAD
# thanks to jsk-ros-pkg
# vim:set ts=2 sw=2 et:
language: cpp
compiler:
  - gcc
  #- clang
env:
  global:
    - ROS_DISTRO=hydro # wait until travis will update to 14.04
  matrix:
    - MAVLINK_DIALECT=common
    - MAVLINK_DIALECT=pixhawk
    - MAVLINK_DIALECT=ardupilotmega

before_install:
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  #- sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
  - sudo sh -c 'echo "deb http://packages.ros.org/ros-shadow-fixed/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros python-rosinstall python-catkin-tools
  # Setup rosdep
  - sudo rosdep init
  - rosdep update

install:
  # Create workspace
  - mkdir -p ~/ros/ws_$REPOSITORY_NAME
  - cd ~/ros/ws_$REPOSITORY_NAME
  - catkin config --init --mkdirs
  - cd src
  # Clone mavlink dependency
  - git clone https://github.com/mavlink/mavlink-gbp-release.git mavlink -b release/jade/mavlink
  # Link the repo we are testing to the new workspace
  - ln -s $CI_SOURCE_PATH .
  # Install dependencies for source repos
  - rosdep install -r -n --from-paths . --ignore-src --rosdistro $ROS_DISTRO -y

before_script:
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - rospack profile

script:
  - cd ~/ros/ws_$REPOSITORY_NAME
  - catkin config --install --cmake-args -DMAVLINK_DIALECT=$MAVLINK_DIALECT
  - catkin build -j4 --verbose --summary
  - catkin run_tests -p1 -j4 --summary
  #- catkin_test_results --all ~/ros/ws_$REPOSITORY_NAME/build

after_failure:
  - find ~/ros/ws_$REPOSITORY_NAME/build -path '*/test_results/*' -type f -exec echo "==== {} ====" \; -exec cat {} \;

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/b856f174ff9736ad23ec
    on_success: change
    on_failure: always
    on_start: false
=======
env:
  global:
  - secure: Od2ZYUhrfms2EKvWZ+fhiy2aUMKO5v8km9gvRpLs3fQx/Wo23oQwVVx1lNE/bIZ9Uea596d/Y5VnSkZ4r7HRhwyyMw7F2M+5wbW+RIfHN05XaDma3H9ulF94mWQiMrbT9yFur3AeKb+Wwavl6U0bH7/DsFcXLq/z+1GaRNH/Bnc=

language: python
python:
  - "2.6"
  - "2.7"
  - "3.2"
  - "3.3"
script:
  # NOTE: we must do all testing on the installed python package, not 
  # on the build tree. Otherwise the testing is invalid and may not
  # indicate the code actually works
  #
  # Set pythonpath

  # install
  - cd pymavlink
  - python setup.py build install
  - cd ..

  # Generate messages
  - mavgen.py --lang='Python' 	--output=/tmp/ message_definitions/v1.0/common.xml
  - mavgen.py --lang='C' 	--output=/tmp/ message_definitions/v1.0/common.xml
  - mavgen.py --lang='CS' 	--output=/tmp/ message_definitions/v1.0/common.xml
  - mavgen.py --lang='WLua' 	--output=/tmp/ message_definitions/v1.0/common.xml
  - mavgen.py --lang='Java'	--output=/tmp/ message_definitions/v1.0/common.xml
  # Avoid `spurious errors` caused by ~/.npm permission issues
  # ref: https://github.com/travis-ci/travis-ci/issues/2244
  # ref: https://github.com/npm/npm/issues/4815
  # Does it already exist? Who owns? What permissions?
  - ls -lah ~/.npm || mkdir ~/.npm
  # Make sure we own it
  # $USER references the current user in Travis env
  - sudo chown -R $USER ~/.npm
  - "cd pymavlink/generator/javascript && npm test"

  # Test quaternions
  - cd $TRAVIS_BUILD_DIR
  - pymavlink/tools/quaterniontest.py

after_success:
- ./scripts/travis_update_generated_repos.sh
>>>>>>> upstream/master
